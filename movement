# Part of godot engine
extends KinematicBody2D

# Variable that can be changed
var accel = 6 				# How fast the player accelerates
var decel = 7				# How fast the player decelerates
var max_speed = 365			# Max speed the player can move
var min_speed = 0			# Minimum speed the player can move
var latency = 11			# How many frames of input latency. (effects movenemt and turning)


# Misalanous variables
var velocity = 1
var latency_list = []
var movement: Vector2
var time_till_max_speed = (accel * 60.0) / max_speed
var setup_needed = true
var none_dir: Vector2
var drag_enabled = false


# This function runs every frame
func _physics_process(delta):
	# runs once at the start of the program
	if setup_needed:
		setup()
		setup_needed = false
	
	# gets the mouse position, and bases movement off of it
	var new_position = get_global_mouse_position()
	movement = new_position - position;
	
	# Checks if the player is clicking. If so, accelerate, if not decelerate.
	# If the player is clicking, but the object is not moveing, also decelerate
	if drag_enabled:
		if movement != none_dir:
			accelerate()
		else:
			decelerate()
	else:
		decelerate()
	
	# normalizes (sets length to 1) the movement vector and applys the velocity to it
	if movement.length() > (velocity * delta):
		movement = velocity * delta * movement.normalized()
	
	# applys the frame latency variable
	movement = apply_latency(movement)
	
	# Apply movement
	move_and_collide(movement)
	
	
# accelerates the player (not past max_speed)
func accelerate():
	if velocity + accel <= max_speed:
		velocity += accel


# decelerates the player (not past min_speed)
func decelerate():
	if velocity - decel >= min_speed:
			velocity -= decel


# applies the frame latency variable to have the player move to where the mouse was so many frames ago.
func apply_latency(movement):
	latency_list.append(movement)
	if len(latency_list) > latency:
		latency_list.remove(0)
	return latency_list[0]



# One time startup function to initialize the latency_list variable that 
# tracks the movement of the player over the last so many frames.
func setup_latency_list():
	var empty_vector: Vector2
	for i in range(latency):
		latency_list.append(empty_vector)



# One time startup function. Prints time_till_max_speed in seconds, and runs setup_latency_list() function
func setup():
	setup_latency_list()
	print("time till max speed ", time_till_max_speed, " seconds")


# Gets click input of the mouse and changes the drag_enabled to true or false
# depending on whether the mouse is clicked or not.
func _input(event):
	if event is InputEventMouseButton:
		if drag_enabled:
			drag_enabled = false
		else:
			drag_enabled = true
			if velocity == 0:
				velocity = 1
