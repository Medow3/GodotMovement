extends KinematicBody2D

# Player movement speed
export var velocity = 1

var accel = 10
var max_speed = 701
var min_speed = 0
var decel = 10

var time_till_max_speed = (accel * 60.0) / max_speed

# Player dragging flag
var drag_enabled = false

func _physics_process(delta):
	
	print("time till max speed ", time_till_max_speed, " seconds")
	# Get player input
	var direction: Vector2
	var none_dir: Vector2
	# Calculate movement
	var movement = velocity * direction
	
	var new_position = get_global_mouse_position()
	movement = new_position - position;
	if movement.length() > (velocity * delta):
		movement = velocity * delta * movement.normalized()
	# If dragging is enabled, use mouse position to calculate movement
	if drag_enabled:
		if movement != none_dir:
			if velocity + accel <= max_speed:
				velocity += accel
		else:
			if velocity - decel >= min_speed:
				velocity -= decel
		
	else:
		if velocity - decel >= min_speed:
			velocity -= decel
	
	# Apply movement
	move_and_collide(movement)
	

func _input(event):
	if event is InputEventMouseButton:
		if drag_enabled:
			drag_enabled = false
		else:
			drag_enabled = true
			if velocity == 0:
				velocity = 1
